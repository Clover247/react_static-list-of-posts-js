{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsData","postsFromServer","authorId","postId","authorInfo","userId","usersFromServer","find","allPostComments","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCpBIG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EACEC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,UCJrDC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAEEU,EAFFV,KACAC,EACES,EADFT,MAGF,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCNMW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBF,EAIEE,EAJFF,KACAG,EAGED,EAHFC,MACAX,EAEEU,EAFFV,KACAI,EACEM,EADFN,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCU,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAGsB,IAApBI,EAASQ,OACL,cAAC,EAAD,CAAaR,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,iCC/BCS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWI,EAAMR,UCajD,IAAMS,EAAYC,EAAgBX,KAAI,SAACK,GAC5C,IAXiBO,EAKSC,EAMpBC,GAXWF,EAWYP,EAAKU,OAV3BC,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKF,KAAOW,MAC7C,MAUGM,GAPoBL,EAOiBR,EAAKJ,GANzCkB,EAAmBC,QAAO,SAAA5B,GAAO,OAAIA,EAAQqB,SAAWA,MAC5D,MAOH,OAAO,2BACFR,GADL,IAEEF,KAAMW,EACNf,SAAUmB,OAIDG,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOC,QC5BrBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff95bf4d.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments\n      .map(comment => <CommentInfo comment={comment} key={comment.id} />)}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    user,\n    title,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {\n        comments.length !== 0\n          ? <CommentList comments={comments} />\n          : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => <PostInfo post={post} key={posts.id} />)}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getAuthor(authorId) {\n  return usersFromServer.find(user => user.id === authorId)\n  || null;\n}\n\nfunction getAllPostComments(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n  || null;\n}\n\nexport const postsData = postsFromServer.map((post) => {\n  const authorInfo = getAuthor(post.userId);\n  const allPostComments = getAllPostComments(post.id);\n\n  return {\n    ...post,\n    user: authorInfo,\n    comments: allPostComments,\n  };\n});\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={postsData} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}